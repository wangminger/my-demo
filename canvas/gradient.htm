<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>gradient</title>
</head>
<body>
	<canvas width="400" height="400" style="border: 1px solid" id="drawing"></canvas>

	<script type="text/javascript">
		var drawing = document.getElementById("drawing");
		//var context = drawing.getContext("2d");
		/*var gradient = context.createLinearGradient(30,30,70,70);
		gradient.addColorStop(0,"white");
		gradient.addColorStop(1,"black");

		context.fillStyle = "#ff0000";
		context.fillRect(10,10,50,50);

		context.fillStyle = gradient;
		context.fillRect(30,30,50,50);

		context.fillStyle = gradient;
		context.fillRect(50,50,50,50);*/
/*		context.fillStyle = "#ff0000";
		context.fillRect(10,10,50,50);

		context.globalAlpha = 0.5;

		context.fillStyle = "rgb(0,0,255)";
		context.fillRect(30,30,50,50);

		context.globalAlpha = 1;

		context.fillStyle = "#ff0000"
		context.fillRect(70,70,50,50);

		context.globalCompositeOperation = "xor";
		context.fillStyle = "rgba(0,0,255,1)";
		context.fillRect(90,90,50,50);*/
		if (drawing.getContext) {
			try {
				gl = drawing.getContext("experimental-webgl");
			} catch(ex) {
				// nothing
			}

			if (gl) {
				//使用webGL
			}
			else{
				alert("WebGL context could not be created");
			}

			//使用着色器清楚视口
			gl.clearColor(0,0,0,1);  //black
			gl.clear(gl.COLOR_BUFFER_BIT);

			//定义三个顶点以及每个顶点的x和y坐标
			var vertices = new Float32Array([0, 1, 1, -1, -1, -1]),
				buffer = gl.createBuffer(),
				vertexSetSize = 2,
				vertexSetCount = vertices.length/vertexSetSize,
				program = gl.createProgram(),
				vertexShader = gl.createShader(gl.VERTEX_SHADER),
				uColor, aVertexPosition;
			gl. attachShader(program, vertexShader);
			
			gl.linkProgram(program);
			// 把数据放入缓存区
			gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
			gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);

			//为片段着色器传入颜色值
			uColor = gl.getUniformLocation(program, "uColor");
			gl.uniform4fv(uColor, [0,255,255,1]);

			//为着色器传入顶点信息
			aVertexPosition = gl.getAttribLocation(program, "aVertexPosition");
			gl.enableVertexAttribArray(aVertexPosition);
			gl.vertexAttribPointer(aVertexPosition, vertexSetSize, gl.FLOAT, false, 0, 0);

			//绘制三角形
			gl.drawArrays(gl.TRIANGLES, 0, vertexSetCount);
		}
		
		
	</script>
</body>
</html>